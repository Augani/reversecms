{"version":3,"sources":["images/apple-computer-decor-design-326502.jpg","images/logo.png","logo.svg","reducers/index.js","actions/types.js","store/index.js","utils/queries.js","pages/auth.js","actions/index.js","components/drop.js","pages/userData.js","components/table.js","pages/Homecontent.js","pages/home.js","pages/index.js","App.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["module","exports","INITIAL_STATE","LOGGED_IN","USER","THEME","user","localStorage","getItem","JSON","parse","PROFILE","Reducer","state","action","type","payload","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","LOGIN_SCRIPT","gql","REGISTER_NEW_USER","PUBLISH_SITE","ADD_SITE","DELETE_SITE","GET_USERS","GET_SITES_USER","GET_EDITABLE","REGISTER_NEW_USER_WITH_SITE","UPDATE_PAGE","ForgotR","withRouter","props","location","pathname","className","for","id","placeholder","to","Date","getFullYear","Auth","renderPage","route","LoginUser","this","_id","PureComponent","mapStateToProps","mapDispatchToProps","data","setItem","stringify","Login","useMutation","loginRun","React","useState","signClicked","username","password","email","confirmPassword","values","setValues","defaultOptions","loop","autoplay","animationData","Cms","rendererSettings","preserveAspectRatio","onChange","e","target","name","value","a","toaster","warning","variables","then","response","login","danger","success","catch","error","options","height","width","isStopped","isPaused","src","Logo","onClick","href","Register","connect","loading","Component","useStyles","makeStyles","theme","root","display","size","Avatar","style","alt","Image","hide","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","dispatch","table","Columns","Data","title","columns","field","lookup","34","63","surname","birthYear","birthCity","setState","icons","onRowClick","view","editable","onRowAdd","add","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","update","oldData","indexOf","onRowDelete","delete","splice","calc","x","y","innerHeight","innerWidth","Homecontent","v","Published","Drafts","Users","AddUsers","ChangePassword","ProfileView","page","Pane","MyDropzone","added","setAdded","onDrop","useCallback","acceptedFiles","droppedImage","close","upload","site","useDropzone","getRootProps","getInputProps","isDragActive","Buttons","prop","set","split","useQuery","setUser","alldata","SetAlldata","useEffect","final","getAllUsers","map","r","userType","sites","Array","isArray","length","loaddata","m","oldPassword","newPassword","confirmNewPassword","registerWithSite","setPost","newValues","sessionStorage","ownIndex","setOwnIndex","initialState","selectedIndex","tabs","UserForm","submit","vals","next","WebsiteForm","tabsTitle","Tablist","marginBottom","flexBasis","marginRight","tab","index","Tab","key","onSelect","isSelected","aria-controls","padding","background","flex","role","aria-labelledby","aria-hidden","ftpUsername","setFtpUsername","ftpPassword","setFtpPassword","ftp","setFtp","url","setUrl","pagename","setPageName","val","Send","Tile","addSite","PublishSite","lo","er","deleteSite","load","err","useSpring","xys","config","mass","tension","friction","editor","setEditor","edit","setEdit","setPage","siteLink","setSiteLink","setUpdate","pageSelected","setPageSelected","viewEdit","d","c","web","siteUpload","files","notify","formData","FormData","imagefile","append","$","trigger","axios","post","headers","maxContentLength","maxBodyLength","onUploadProgress","progressEvent","lengthComputable","percentCompleted","Math","round","loaded","total","console","log","text","resp","EditReady","stationary","Close","isShown","progress","Fragment","CornerDialog","hasFooter","onCloseComplete","Button","div","onMouseMove","clientX","clientY","onMouseLeave","isLoading","didUpdate","Dialog","isConfirmLoading","onConfirm","ftpUrl","siteUrl","ftpUser","ftpPass","confirmLabel","t","viewSite","owner","hasClose","onCancel","elevation","Props","upd","setUpd","allSites","setAllSites","getSitesByUser","updatePage","stat","setSite","currentPage","setCurrentPage","setupSite","iframeRef","createRef","addContext","b","i","document","getElementById","posX","posY","top","left","visibility","opacity","contentWindow","addEventListener","el","IncFont","getId","DecFont","IncM","DecM","IncL","DecL","Und","IncW","DecW","Color","getComputedStyle","getPropertyValue","onclick","currentSize","parseFloat","fontSize","margin","lineHeight","fontWeight","textDecoration","includes","onchange","color","ImageDrop","FileReader","fr","onload","frame","result","removeAttribute","readAsDataURL","g","getElementsByTagName","p","h","querySelectorAll","ev","preventDefault","attr","ImageClick","Spinner","filtered","getEditable","class","execCommand","current","full","f","XMLSerializer","serializeToString","pageData","item","disabled","Home","change","content","renderContent","Navs","logout","LogoutUser","Navbar","Vnav","MenuIcon","lok","from","active","where","menu","removeItem","useLocation","home","users","settings","changeActive","List","component","aria-label","ListItem","button","ListItemText","primary","menus","App","path","Pages","Boolean","hostname","match","client","ApolloClient","uri","Wrapper","Store","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b43b56bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/apple-computer-decor-design-326502.3e6ef604.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ca999f9b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {LoginUser} from '../actions';\r\nimport {LOGIN, LOGOUT, REGISTER} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    LOGGED_IN: false,\r\n    USER: {},\r\n    THEME: \"light\",\r\n    user:localStorage.getItem('userInfo')? JSON.parse(localStorage.getItem('userInfo'))[0]:{},\r\n    PROFILE:localStorage.getItem('userInfo')? JSON.parse(localStorage.getItem('userInfo'))[0]:{},\r\n};\r\n\r\nconst Reducer = (state = INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                LOGGED_IN: true,\r\n                PROFILE: action.payload,\r\n            }\r\n         case LOGOUT:\r\n             return {\r\n                 ...state,\r\n                 LOGGED_IN: false,\r\n                 PROFILE: action.payload\r\n             }   \r\n        case REGISTER:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }     \r\n        default:\r\n            return state;    \r\n\r\n    }\r\n}\r\n\r\nexport default Reducer;","export const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const REGISTER  = \"REGISTER\";","import { createStore } from 'redux';\r\nimport Reducer from '../reducers'\r\n\r\nconst store = createStore(\r\n    Reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && \r\n    window.__REDUX_DEVTOOLS_EXTENSION__()\r\n )\r\n\r\n export default store;","import { gql } from 'apollo-boost'\r\n\r\nexport const  LOGIN_SCRIPT = gql`\r\n  mutation Login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      _id,\r\n      username,\r\n      email,\r\n      userType\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RESET_PASSWORD = gql`\r\nmutation Reset($username: String!){\r\n    resetPass(username: $username){\r\n        response\r\n    }\r\n}\r\n`;\r\n\r\nexport const REGISTER_NEW_USER = gql`\r\n    mutation Register( $username: String!, $email: String!, $password: String!){\r\n        register(user: {username: $username, password: $password, email: $email}){\r\n            _id,\r\n            username,\r\n            email,\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPLOAD_FILE = gql`\r\n   \r\n    mutation upload($filename: String!, $pagename: String!, $owner: UserData! ){\r\n        fileUpload(data: {filename: $filename,pagename: $pagename, owner: $owner}){\r\n            _id,\r\n            filename,\r\n            pagename,\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PUBLISH_SITE = gql`\r\n   \r\n    mutation publish($username: String!, $site: String! ){\r\n        publishSite(username: $username,site: $site)\r\n    }\r\n`;\r\n\r\nexport const ADD_SITE = gql`\r\n   \r\n    mutation upSite($siteUrl: String!, $pagename: String!, $username: String!, $ftpUrl: String, $ftpUser: String, $ftpPass: String){\r\n        addSite(data: {siteUrl: $siteUrl,pagename: $pagename, ftpUrl: $ftpUrl, username: $username, ftpUsername: $ftpUser, ftpPassword: $ftpPass}){\r\n            _id,\r\n            siteUrl,\r\n            pagename,\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_SITE = gql`\r\n    mutation removeSite($id: String){\r\n        removeSite(id: $id)\r\n    }\r\n`;\r\n\r\nexport const GET_USERS = gql`\r\n        {\r\n            getAllUsers{\r\n                _id,\r\n                username,\r\n                password,\r\n                email,\r\n                userType,\r\n                sites\r\n            }\r\n        }\r\n`;\r\n\r\n\r\nexport const GET_SITES_USER = gql`\r\n       query getSitesUser($username: String!){\r\n            getSitesByUser(username:$username){\r\n                _id,\r\n                siteUrl,\r\n                ftpUrl,\r\n                pagename,\r\n                owner{\r\n                    email,\r\n                    username\r\n                }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_EDITABLE = gql`\r\n       query getEditableContent($pagename: String, $email: String){\r\n            getEditable(data:{pagename: $pagename, username: $email})\r\n    }\r\n`;\r\n\r\nexport const REGISTER_NEW_USER_WITH_SITE = gql`\r\nmutation RegisterWithSite( $username: String!, $email: String!, $password: String!,$url: String!, $pagename: String!, $ftp: String, $ftpUsername: String, $ftpPassword: String){\r\n    registerWithSite(user: {username: $username, password: $password, email: $email, url: $url, ftp: $ftp, ftpUsername: $ftpUsername, ftpPassword: $ftpPassword, pagename: $pagename})\r\n}\r\n\r\n`;\r\n\r\nexport const UPDATE_PAGE = gql`\r\nmutation updatePage($pageData: String!, $page: String, $username: String, $pagename: String){\r\n    updatePageData(pageData: $pageData, page: $page, username: $username, pagename: $pagename)\r\n}\r\n\r\n`;\r\n","import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { toaster } from 'evergreen-ui'\r\nimport back from '../images/apple-computer-decor-design-326502.jpg'\r\nimport './auth.css'\r\nimport { withRouter, Link, Redirect } from 'react-router-dom'\r\nimport Lottie from 'react-lottie'\r\nimport {LOGIN_SCRIPT, REGISTER_NEW_USER} from '../utils/queries'\r\nimport Cms from '../anim/17343-programming.json'\r\nimport { useQuery, useMutation } from '@apollo/react-hooks'\r\nimport { LoginUser } from '../actions'\r\nimport Logo from '../images/logo.png'\r\n\r\nfunction LoginRT (props) {\r\n  const [loginRun] = useMutation(LOGIN_SCRIPT);\r\n  const [values, setValues] = React.useState({\r\n    signClicked: false,\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n    confirmPassword: ''\r\n  })\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: Cms,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  }\r\n  const onChange = e => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const Login = async()=>{\r\n    if(!values.username || !values.password)return toaster.warning('Please fill all fields');\r\n    loginRun({\r\n      variables: { username: values.username, password: values.password }\r\n    }).then((response)=>{\r\n      if(!response.data.login._id)return toaster.danger('Invalid Username and/or password');\r\n      toaster.success('Login Successful')\r\n      props.LoginUser(response.data.login)\r\n    }).catch((error)=>{\r\n      return toaster.danger('Invalid Username and/or password')\r\n    })\r\n   \r\n  }\r\n\r\n  return (\r\n    <div className='h-full w-full grid grid-cols-1 md:grid-cols-2'>\r\n      <div className='bg-blue-900 w-full hidden md:block leftHook'>\r\n        <div className='absolute h-full w-full leftHookCover'></div>\r\n        <div className='absolute leftHeading w-full h-full flex flex-col justify-center items-center'>\r\n         \r\n          <Lottie\r\n            options={defaultOptions}\r\n            height={400}\r\n            width={400}\r\n            isStopped={false}\r\n            isPaused={false}\r\n          />\r\n          <p className='text-xl text-blue-100 font-bold'>Manage web pages with ease</p>\r\n        </div>\r\n      </div>\r\n\r\n      {props.location.pathname === '/' ||\r\n      props.location.pathname == '/login' ? (\r\n        <div className='w-full flex flex-col justify-center items-center'>\r\n          <div className='w-4/5 md:w-3/5 lg:w-2/5'>\r\n            <form className='bg-white  rounded px-8 pt-6 pb-8 mb-4'>\r\n              <h3 className='md:text-4xl text-2xl  text-center font-bold'>\r\n                {/* Tentem Web */}\r\n                <img src={Logo}/>\r\n              </h3>\r\n              <hr />\r\n              <div className='mb-4 mt-6'>\r\n                <label\r\n                  className='block  text-sm font-bold mb-2'\r\n                  for='username'\r\n                >\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n                  id='email'\r\n                  type='email'\r\n                  onChange={onChange}\r\n                  name=\"username\"\r\n                  value={values.username}\r\n                  placeholder='right@gmail.com'\r\n                />\r\n              </div>\r\n              <div className='mb-6'>\r\n                <label\r\n                  className='block  text-sm font-bold mb-2'\r\n                  for='password'\r\n                >\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n                  id='password'\r\n                  value={values.password}\r\n                  onChange={onChange}\r\n                  name=\"password\"\r\n                  type='password'\r\n                  placeholder='******************'\r\n                />\r\n              </div>\r\n              <div className='flex flex-col items-center justify-between'>\r\n                <button\r\n                onClick={Login}\r\n                  className='bb0 w-full mb-4 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n                  type='button'\r\n                >\r\n                  Sign In\r\n                </button>\r\n                <a\r\n                  className='inline-block align-baseline mb-4 font-bold text-sm text-red-700  hover:text-gray-900'\r\n                  href='/forgot'\r\n                >\r\n                  Forgot Password?\r\n                </a>\r\n                {/* <p className='text-center text-gray-900'>\r\n                  Don't have an account? <br className=\"md:hidden\"/>\r\n                  <Link className='text-red-700' to='/signup'>\r\n                    Create One\r\n                  </Link>\r\n                </p> */}\r\n              </div>\r\n            </form>\r\n            <p className='text-center text-gray-500 text-xs'>\r\n              &copy;{new Date().getFullYear()} Epareto Information Systems. <br className=\"md:hidden\"/> All\r\n              rights reserved.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Register />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction RegisterT (props) {\r\n  const [registerRun, { loading, error }] = useMutation(REGISTER_NEW_USER);\r\n  const [values, setValues] = React.useState({\r\n    signClicked: false,\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n    confirmPassword: ''\r\n  })\r\n  const onChange = e => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const Register = async () =>{\r\n    const {username, password, confirmPassword, email} = values;\r\n    if(!username || !password || !confirmPassword || !email)return toaster.warning(\"Please fill all fields\");\r\n    if(password !== confirmPassword)return toaster.danger('Passwords do not match');\r\n    registerRun({\r\n      variables: { username, password, email }\r\n    }).then((response)=>{\r\n      toaster.success('Registered Successfully');\r\n      props.history.push('/');\r\n      // props.LoginUser(response.data.register)\r\n    }).catch((error)=>{\r\n      return toaster.danger('Either email or username is taken already');\r\n    })\r\n   \r\n  }\r\n  return (\r\n    <div className='w-full flex flex-col justify-center items-center'>\r\n      <div className='w-4/5 md:w-2/5'>\r\n        <form className='bg-white  rounded px-8 pt-6 pb-8 mb-4'>\r\n          <h3 className='md:text-4xl text-2xl  text-center font-bold'>\r\n          <img src={Logo}/>\r\n          </h3>\r\n          <hr />\r\n          <div className='mb-4 mt-6'>\r\n            <label\r\n              className='block  text-sm font-bold mb-2'\r\n              for='username'\r\n            >\r\n              Username\r\n            </label>\r\n            <input\r\n              className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n              id='username'\r\n              value={values.username}\r\n              onChange={onChange}\r\n              name=\"username\"\r\n              type='text'\r\n              placeholder='Username'\r\n            />\r\n          </div>\r\n          <div className='mb-4'>\r\n            <label\r\n              className='block  text-sm font-bold mb-2'\r\n              for='username'\r\n            >\r\n              Email\r\n            </label>\r\n            <input\r\n              className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n              id='email'\r\n              value={values.email}\r\n              onChange={onChange}\r\n              name=\"email\"\r\n              type='email'\r\n              placeholder='Email'\r\n            />\r\n          </div>\r\n          <div className='mb-4'>\r\n            <label\r\n              className='block  text-sm font-bold mb-2'\r\n              for='password'\r\n            >\r\n              Password\r\n            </label>\r\n            <input\r\n              className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n              id='password'\r\n              type='password'\r\n              value={values.password}\r\n              onChange={onChange}\r\n              name=\"password\"\r\n              placeholder='******************'\r\n            />\r\n           \r\n          </div>\r\n          <div className='mb-6'>\r\n            <label\r\n              className='block  text-sm font-bold mb-2'\r\n              for='password'\r\n            >\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n              id='password'\r\n              value={values.confirmPassword}\r\n              onChange={onChange}\r\n              type='password'\r\n              name=\"confirmPassword\"\r\n              placeholder='******************'\r\n            />\r\n            \r\n          </div>\r\n          <div className='flex flex-col items-center justify-between'>\r\n            {/* <button\r\n              className='bb0 w-full mb-4 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n              type='button'\r\n              onClick={Register}\r\n            >\r\n              Create account\r\n            </button> */}\r\n\r\n            <p className='text-center text-gray-900'>\r\n              Already a member?<br className=\"md:hidden\"/>\r\n              <Link className='text-red-700' to='/'>\r\n                Sign In\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </form>\r\n        <p className='text-center text-gray-500 text-xs'>\r\n          &copy;{new Date().getFullYear()} Epareto Information Systems. <br className=\"md:hidden\"/> All\r\n          rights reserved.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Forgot (props) {\r\n  if (props.location.pathname == '/' || props.location.pathname == '/login')\r\n    return <Login />\r\n  if (props.location.pathname == '/signup') return <Login />\r\n  return (\r\n    <div className='w-full h-full flex flex-col justify-center items-center'>\r\n      <div className='w-4/5 md:w-3/5 lg:w-1/4'>\r\n        <form className='bg-white  rounded px-8 pt-6 pb-8 mb-4'>\r\n          <h2 className='text-center  md:text-4xl text-xl font-bold'>\r\n            Recover Password\r\n          </h2>\r\n          <hr />\r\n          <div className='mb-4 mt-6'>\r\n            <label\r\n              className='block  text-sm font-bold mb-2'\r\n              for='username'\r\n            >\r\n              Email\r\n            </label>\r\n            <input\r\n              className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n              id='emailForgot'\r\n              type='email'\r\n              placeholder='Your Email'\r\n            />\r\n          </div>\r\n          <div className='flex flex-col items-center justify-between'>\r\n            <button\r\n              className='bg-blue-900 w-full mb-4 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n              type='button'\r\n            >\r\n              Send Reset Email\r\n            </button>\r\n\r\n            <p className='text-center text-sm md:text-xl text-gray-500'>\r\n              Remember Password?{' '}\r\n              <Link className='text-gray-700' to='/login'>\r\n                Sign In\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </form>\r\n        <p className='text-center text-gray-500 text-xs'>\r\n          &copy;{new Date().getFullYear()} Epareto Information Systems. All\r\n          rights reserved.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ForgotR = withRouter(Forgot)\r\n\r\nclass Auth extends PureComponent {\r\n  static propTypes = {}\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      route: this.props.location.pathname\r\n    }\r\n  }\r\n\r\n  renderPage = () => {\r\n    switch (this.state.route) {\r\n      case '/':\r\n        return <Login LoginUser={this.props.LoginUser} />\r\n      case '/login':\r\n        return <Login LoginUser={this.props.LoginUser} />\r\n      case '/signup':\r\n        return <Login LoginUser={this.props.LoginUser} />\r\n      case '/forgot':\r\n        return <ForgotR />\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n  }\r\n\r\n  render () {\r\n    if(this.props.PROFILE._id){\r\n      return <Redirect to=\"/home\"/>\r\n    }\r\n    return <div className='w-screen h-screen'>{this.renderPage()}</div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => (state)\r\n\r\nconst mapDispatchToProps = {\r\n  LoginUser\r\n}\r\n\r\nconst Login = withRouter(LoginRT);\r\nconst Register = connect(mapStateToProps, mapDispatchToProps)(withRouter(RegisterT));\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Auth))\r\n","import {LOGIN, LOGOUT, REGISTER} from './types'\r\n\r\n\r\nexport const LoginUser = data =>{\r\n    localStorage.setItem('userInfo', JSON.stringify([data]))\r\n    return {\r\n        payload: data,\r\n        type: LOGIN\r\n    }\r\n}\r\n\r\nexport const LogoutUser  = ()=>{\r\n    localStorage.removeItem('userInfo');\r\n    return {\r\n        payload: {},\r\n        type: LOGOUT\r\n    }\r\n}\r\n\r\nexport const RegisterUser = data =>{\r\n    return{\r\n        payload: data,\r\n        type: REGISTER\r\n    }\r\n}","import React, { Component, Fragment } from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport ReactDropzone from \"react-dropzone\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      files: [],\r\n    };\r\n  }\r\n\r\n  onPreviewDrop = (files) => {\r\n    this.setState({\r\n      files: this.state.files.concat(files),\r\n     });\r\n  }\r\n\r\n  render() {\r\n    const previewStyle = {\r\n      display: 'inline',\r\n      width: 100,\r\n      height: 100,\r\n    };\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <ReactDropzone\r\n          accept=\"image/*\"\r\n          onDrop={this.onPreviewDrop}\r\n        >\r\n          Drop an image, get a preview!\r\n        </ReactDropzone>\r\n        {this.state.files.length > 0 &&\r\n          <Fragment>\r\n            <h3>Previews</h3>\r\n            {this.state.files.map((file) => (\r\n              <img\r\n                alt=\"Preview\"\r\n                key={file.preview}\r\n                src={file.preview}\r\n                style={previewStyle}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Avatar } from '@material-ui/core'\r\nimport Image from '../images/apple-computer-decor-design-326502.jpg'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    \r\n  }\r\n}))\r\n\r\nfunction UserData (props) {\r\n  const classes = useStyles()\r\n  const size = props.size == \"large\"?{\r\n    width: 150,\r\n    height: 150\r\n  }:{};\r\n  return (\r\n    <div className='flex flex-row-reverse  items-center'>\r\n      \r\n        <Avatar style={size} alt='Remy Sharp' src={Image} className=\"mx-4\" />\r\n      \r\n      {props.hide?null: <h4 className=\" font-black text-blue-900 text-xl\">{props.PROFILE.username}</h4>}\r\n       \r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => (state)\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserData)\r\n","import React, {forwardRef} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\nfunction Table(props) {\r\n    const {Columns, Data, title, options} = props.table;\r\n    const [state, setState] = React.useState({\r\n      columns: [\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'Surname', field: 'surname' },\r\n        { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n        {\r\n          title: 'Birth Place',\r\n          field: 'birthCity',\r\n          lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n        },\r\n      ],\r\n      data: [\r\n        { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n        {\r\n          name: 'Zerya Betül',\r\n          surname: 'Baran',\r\n          birthYear: 2017,\r\n          birthCity: 34,\r\n        },\r\n      ],\r\n    });\r\n  \r\n    return (\r\n     <div className={`${props.className} h-full`}>\r\n        <MaterialTable\r\n        title={title}\r\n        icons={tableIcons}\r\n        columns={Columns}\r\n        \r\n        data={Data}\r\n        onRowClick={options?.view}\r\n        editable={{\r\n          onRowAdd: !options?.add?null: (newData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data.push(newData);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 600);\r\n            }),\r\n          onRowUpdate: !options?.update?null: (newData, oldData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                if (oldData) {\r\n                  setState((prevState) => {\r\n                    const data = [...prevState.data];\r\n                    data[data.indexOf(oldData)] = newData;\r\n                    return { ...prevState, data };\r\n                  });\r\n                }\r\n              }, 600);\r\n            }),\r\n          onRowDelete: !options?.delete?null: (oldData) =>\r\n            new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data.splice(data.indexOf(oldData), 1);\r\n                  return { ...prevState, data };\r\n                });\r\n              }, 600);\r\n            }),\r\n        }}\r\n      />\r\n     </div>\r\n    );\r\n  }\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table)\r\n","import React, {PureComponent, useCallback} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as JqueryP from 'jquery.dropzone';\r\nimport {\r\n  Pane,\r\n  Dialog,\r\n  FilePicker,\r\n  toaster,\r\n  Spinner,\r\n  CornerDialog,\r\n  Tab,\r\n  Tablist,\r\n  TablistProps,\r\n  Paragraph\r\n} from 'evergreen-ui';\r\n\r\nimport DropImage from '../components/drop';\r\nimport {parse} from 'node-html-parser';\r\nimport User from './userData'\r\nimport {useTransition, animated, useSpring} from 'react-spring'\r\nimport {FiUpload, FiDelete, FiEdit, FiEye, FiSkipBack} from 'react-icons/fi'\r\nimport {AiOutlineClose, AiOutlineFolderAdd, AiOutlineCloudUpload} from 'react-icons/ai'\r\nimport Component from '@reactions/component'\r\nimport {withRouter, Link, Redirect} from 'react-router-dom'\r\nimport Table from '../components/table';\r\nimport $ from 'jquery';\r\nimport { Avatar, Button } from '@material-ui/core'\r\nimport axios from 'axios';\r\nimport {\r\n  LOGIN_SCRIPT,\r\n  REGISTER_NEW_USER_WITH_SITE,\r\n  GET_USERS,\r\n  GET_SITES_USER,\r\n  ADD_SITE,\r\n  GET_EDITABLE,\r\n  DELETE_SITE,\r\n  UPDATE_PAGE,\r\n  PUBLISH_SITE\r\n} from '../utils/queries';\r\nimport {useDropzone} from 'react-dropzone'\r\nimport Cms from '../anim/17343-programming.json'\r\nimport {useQuery, useMutation} from '@apollo/react-hooks'\r\nimport {set} from 'mongoose'\r\n\r\nconst Columns = [\r\n  {\r\n    title: 'Username',\r\n    field: 'username'\r\n  }, {\r\n    title: 'Email',\r\n    field: 'email'\r\n  }, {\r\n    title: 'No of Sites',\r\n    field: 'sites'\r\n  }, {\r\n    title: 'User Type',\r\n    field: 'userType'\r\n  }\r\n];\r\n\r\nconst tableData = [\r\n  {\r\n    id: 'bygyg76g',\r\n    type: 'Token payment',\r\n    description: 'yvgyugvjhviy',\r\n    amount: 103,\r\n    'date': 'Apr 13th, 2020 16:56'\r\n  }, {\r\n    id: 'hjbjkbkj',\r\n    type: 'Token payment',\r\n    description: 'yvgyugvjhviy',\r\n    amount: 103,\r\n    'date': 'Apr 13th, 2020 16:56'\r\n  }\r\n];\r\n\r\nconst calc = (x, y) => [ -(y - window.innerHeight / 3) / 30,\r\n  (x - window.innerWidth / 3) / 30,\r\n  1.1\r\n]\r\nconst trans = (x, y, s) => `perspective(50px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\r\n\r\nclass Homecontent extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      page: this.props.page\r\n    }\r\n  }\r\n\r\n  renderPage = v => {\r\n\r\n    switch (v) {\r\n      case 'Published':\r\n        return <Published/>;\r\n      case 'Drafts':\r\n        return <Drafts/>;\r\n      case 'Accounts':\r\n        return <Users/>;\r\n      case 'Add user':\r\n        return <AddUsers/>;\r\n      case 'Change Password':\r\n        return <ChangePassword/>;\r\n      case 'Profile':\r\n        return <ProfileView/>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='h-full w-full flex flex-col'>\r\n        <Pane className='w-full h-16 shadow-sm p-3 flex flex-row justify-between'>\r\n          <h5 className='text-xl font-bold text-red-700'>{this.props.page}</h5>\r\n          <User/>\r\n        </Pane>\r\n        {this.renderPage(this.props.page)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction ProfileViewL(props) {\r\n  const [values,\r\n    setValues] = React.useState({signClicked: false, username: props.PROFILE.username, password: '', email: props.PROFILE.email, confirmPassword: ''})\r\n  const onChange = e => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"h-full w-full flex flex-col justify-center items-center\">\r\n     <User hide={true} size=\"large\"/>\r\n      <form className='bg-white w-1/4  rounded  pb-8 mb-4'>\r\n       \r\n        <div className='mb-4 mt-6'>\r\n          <label className='block text-red-700 text-sm font-bold mb-2' for='username'>\r\n            Username\r\n          </label>\r\n          <input\r\n            className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n            id='username'\r\n            value={values.username}\r\n            onChange={onChange}\r\n            disabled\r\n            name=\"username\"\r\n            type='text'\r\n            placeholder='Username'/>\r\n        </div>\r\n        <div className='mb-4'>\r\n          <label className='block text-red-700 text-sm font-bold mb-2' for='username'>\r\n            Email\r\n          </label>\r\n          <input\r\n            className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n            id='email'\r\n            value={values.email}\r\n            onChange={onChange}\r\n            name=\"email\"\r\n            disabled\r\n            type='email'\r\n            placeholder='Email'/>\r\n        </div>\r\n      \r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Drafts() {\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col justify-center items-center\">\r\n      <h5>No drafts found</h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TileR(prop) {\r\n  const [addSite, {\r\n      loading,\r\n      error\r\n    }\r\n  ] = useMutation(ADD_SITE);\r\n  const [PublishSite, {\r\n    lo,\r\n    er\r\n  }\r\n] = useMutation(PUBLISH_SITE);\r\n  const [deleteSite, {\r\n      load,\r\n      err\r\n    }\r\n  ] = useMutation(DELETE_SITE);\r\n\r\n  const [props,\r\n    set] = useSpring(() => ({\r\n    xys: [\r\n      0, 0, 1\r\n    ],\r\n    config: {\r\n      mass: 5,\r\n      tension: 100,\r\n      friction: 40\r\n    }\r\n  }))\r\n  const [editor, setEditor] = React.useState('')\r\n  const [ftpUsername,\r\n    setFtpUsername] = React.useState(\"\")\r\n  const [ftpPassword,\r\n    setFtpPassword] = React.useState(\"\")\r\n\r\n  const [file,\r\n    setFile] = React.useState(null);\r\n  const [edit,\r\n    setEdit] = React.useState(false)\r\n  const [site,\r\n    setSite] = React.useState(\"\");\r\n  const [ftp,\r\n    setFtp] = React.useState(\"\");\r\n  const [url,\r\n    setUrl] = React.useState(\"\");\r\n  const [pagename,\r\n    setPageName] = React.useState(\"\");\r\n  const [page,\r\n    setPage] = React.useState(false)\r\n  const [siteLink,\r\n    setSiteLink] = React.useState(\"\");\r\n  const [update,\r\n    setUpdate] = React.useState(false);\r\n\r\n  const [pageSelected,\r\n    setPageSelected] = React.useState('')\r\n\r\n  const viewSite = (d,c) => {\r\n    let web = \"/local/\" + c.email + \"/\" + d + \"/\";\r\n    setEditor(c.email)\r\n    setPageSelected(d);\r\n    setPage(true);\r\n    setSiteLink(web);\r\n   \r\n  }\r\n  const viewEdit = async(d,c) => {\r\n    let web = \"/local/\" + c.email + \"/\" + d + \"/\";\r\n    setPageSelected(d);\r\n    setSiteLink(web)\r\n    setEditor(c.email)\r\n    setEdit(true);\r\n\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    prop.update()\r\n  }, [update])\r\n\r\n  const removeSite = (id) => {\r\n    deleteSite({variables: {\r\n        id\r\n      }}).then(() => {\r\n      toaster.success('Site deleted successfully');\r\n      prop.update()\r\n    })\r\n  }\r\n\r\n  const uploadFile = (f) => {\r\n    addSite({\r\n      variables: {\r\n        ftpUrl: ftp,\r\n        siteUrl: url,\r\n        ftpUser: ftpUsername,\r\n        ftpPass: ftpPassword,\r\n        pagename,\r\n        username: prop.PROFILE.email\r\n      }\r\n    }).then((response) => {\r\n      if (!response.data.addSite) \r\n        return toaster.warning('Site wasn\\'t added');\r\n      setUpdate(true)\r\n      return toaster.success(\"Site added successfully\");\r\n\r\n    })\r\n  }\r\n\r\n  const Push = ()=>{\r\n    PublishSite({\r\n      variables:{\r\n        username: editor,\r\n        site: pageSelected\r\n      }\r\n    }).then((resp)=>{\r\n      console.log(resp)\r\n\r\n    }).catch((e)=>{\r\n\r\n    })\r\n\r\n  }\r\n\r\n  const Close = () => {\r\n    setPage(null)\r\n  }\r\n\r\n  const siteUpload = (files, user, site)=>{\r\n    toaster.notify('Please wait, site is being uploaded')\r\n    var formData = new FormData();\r\n    var imagefile = files;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    formData.append(\"sampleFile\", imagefile[0]);\r\n    formData.append('username', user.email);\r\n    formData.append('pagename', site);\r\n    $('#fileLoader').trigger('click');\r\n    axios.post('/uploadFile', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n        maxContentLength: 100000000,\r\n        maxBodyLength: 1000000000,\r\n        onUploadProgress: (progressEvent)=>{\r\n          if (progressEvent.lengthComputable) {\r\n            let percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total );\r\n            console.log(percentCompleted)\r\n            $('#loaderProgress').text(percentCompleted)\r\n            \r\n         }\r\n        }\r\n    }).then((resp)=>{\r\n      toaster.success('Woohoo!!!\\n Site uploaded successfully');\r\n      toaster.notify('Go ahead and edit')\r\n    }).catch(er=>console.log(er))\r\n    \r\n  }\r\n\r\n  if (edit && siteLink) {\r\n    return <EditReady\r\n      log={editor}\r\n      stationary={siteLink}\r\n      siteLink={siteLink}\r\n      site={pageSelected}\r\n      Close={() => setEdit(false)}/>\r\n  }\r\n\r\n  if (page && siteLink) {\r\n    return (\r\n      <div className=\"w-full h-full flex flex-col items-end\">\r\n     <div className=\"w-full flex flex-row-reverse\">\r\n     <button\r\n          onClick={Push}\r\n          className='bg-green-500 mx-4  mb-4 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n          type='button'>\r\n          Publish Site\r\n        </button>\r\n        <button\r\n          onClick={Close}\r\n          className='bg-red-500  mb-4 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n          type='button'>\r\n          Close\r\n        </button>\r\n     </div>\r\n\r\n        <iframe className=\"w-full h-full\" src={siteLink}></iframe>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-full w-full \">\r\n    <Component initialState={{ isShown: false, progress: 0 }}>\r\n  {({ state, setState }) => (\r\n    <React.Fragment>\r\n      <CornerDialog\r\n        title=\"File uploading\"\r\n        isShown={state.isShown}\r\n        hasFooter={false}\r\n        onCloseComplete={() => setState({ isShown: false })}\r\n      >\r\n       <div className=\"flex flex-row\">\r\n       <p className=\"text-2xl text-blue-600\" id=\"loaderProgress\"></p><p className=\"text-2xl text-blue-600\">%</p>\r\n       </div>\r\n      </CornerDialog>\r\n      <Button className=\"hidden\" id=\"fileLoader\" onClick={() => setState({ isShown: true })}>\r\n       \r\n      </Button>\r\n    </React.Fragment>\r\n  )}\r\n</Component>\r\n      <div className=\"w-full flex flex-row-reverse\">\r\n        <animated.div\r\n          onMouseMove={({clientX: x, clientY: y}) => set({\r\n          xys: calc(x, y)\r\n        })}\r\n          onMouseLeave={() => set({\r\n          xys: [0, 0, 1]\r\n        })}>\r\n\r\n          {prop.PROFILE.userType > 0\r\n            ? (\r\n              <Component\r\n                initialState={{\r\n                isShown: false,\r\n                isLoading: false\r\n              }}\r\n                didUpdate={({state, setState}) => {}}>\r\n                {({state, setState}) => (\r\n                  <Pane>\r\n                    <Dialog\r\n                      isShown={state.isShown}\r\n                      title='Import site'\r\n                      width={400}\r\n                      onCloseComplete={() => setState({isShown: false, isLoading: false})}\r\n                      isConfirmLoading={state.isLoading}\r\n                      onConfirm={() => {\r\n                      setState({isLoading: true});\r\n                      uploadFile();\r\n                      setState({isShown: false});\r\n                    }}\r\n                      confirmLabel={state.isLoading\r\n                      ? 'Importing...'\r\n                      : 'Import'}>\r\n                      <div className='w-full h-full flex flex-col justify-center'>\r\n                        <div className='mb-4'>\r\n                          <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n                            Site name / Alias\r\n                          </label>\r\n                          <input\r\n                            className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n                            id='siteName'\r\n                            type='text'\r\n                            value={pagename}\r\n                            onChange={val => setPageName(val.target.value)}\r\n                            name=\"site\"\r\n                            placeholder='eg. HomeChow'/>\r\n\r\n                        </div>\r\n                        <div className='mb-4'>\r\n                          <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n                            Site Url\r\n                          </label>\r\n                          <input\r\n                            className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n                            id='siteUrl'\r\n                            type='text'\r\n                            value={url}\r\n                            onChange={val => setUrl(val.target.value)}\r\n                            name=\"url\"\r\n                            placeholder='eg. http://'/>\r\n\r\n                        </div>\r\n                        <div className='mb-4'>\r\n                          <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n                            FTP Url\r\n                          </label>\r\n                          <input\r\n                            className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n                            id='ftpUrl'\r\n                            type='text'\r\n                            value={ftp}\r\n                            onChange={val => setFtp(val.target.value)}\r\n                            name=\"ftp\"\r\n                            placeholder='eg. ftp://'/>\r\n\r\n                        </div>\r\n                        <div className='mb-4'>\r\n                          <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n                            FTP Username\r\n                          </label>\r\n                          <input\r\n                            className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n                            id='ftpUrl'\r\n                            type='text'\r\n                            value={ftpUsername}\r\n                            onChange={val => setFtpUsername(val.target.value)}\r\n                            name=\"ftp\"\r\n                            placeholder='eg. ftp://'/>\r\n\r\n                        </div>\r\n                        <div className='mb-4'>\r\n                          <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n                            FTP Password\r\n                          </label>\r\n                          <input\r\n                            className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n                            id='ftpUrl'\r\n                            type='text'\r\n                            value={ftpPassword}\r\n                            onChange={val => setFtpPassword(val.target.value)}\r\n                            name=\"ftp\"\r\n                            placeholder='eg. ftp://'/>\r\n\r\n                        </div>\r\n\r\n                      </div>\r\n                    </Dialog>\r\n                    <AiOutlineFolderAdd\r\n                      className=\"addIcon cursor-pointer\"\r\n                      onClick={() => setState({isShown: true})}/>\r\n\r\n                  </Pane>\r\n                )}\r\n              </Component>\r\n            )\r\n            : null}\r\n\r\n        </animated.div>\r\n      </div>\r\n      <div className=\"w-full h-full grid grid-flow-col grid-cols-5\">\r\n        {prop\r\n          .data\r\n          .map((t, key) => (\r\n            <Pane key={t._id} className=\"mainCard\">\r\n              <Pane className=\"siteBack \">\r\n                <Pane className=\"flex flex-row justify-around w-full my-4\">\r\n                  <FiEye onClick={() => viewSite(t.pagename, t.owner)}/>\r\n                  <FiEdit onClick={() => viewEdit(t.pagename, t.owner)}/> {prop.PROFILE.userType > 0\r\n                    ? (\r\n                      <React.Fragment>\r\n                      <Component\r\n                initialState={{\r\n                isShown: false,\r\n                isLoading: false\r\n              }}\r\n                didUpdate={({state, setState}) => {}}>\r\n                {({state, setState}) => (\r\n                  <Pane>\r\n                    <Dialog\r\n                      isShown={state.isShown}\r\n                      title='Site Uploader'\r\n                      width={400}\r\n                      onCloseComplete={()=>setState({isShown: false, isLoading: false})}\r\n                      hasFooter={false}\r\n                    >\r\n                       <MyDropzone type=\"siteUpload\" site={t.pagename} user={t.owner} upload={siteUpload} close={()=>setState({isShown: false, isLoading: false})}/>\r\n                       {/* <DropImage/> */}\r\n                    </Dialog>\r\n                 \r\n                   <AiOutlineCloudUpload onClick={() =>{\r\n                     \r\n                      setState({isShown: true})}}/>\r\n                  </Pane>\r\n                )}\r\n              </Component>\r\n              <Component\r\n                        initialState={{\r\n                        isShown: false\r\n                      }}>\r\n                        {({state, setState}) => (\r\n                          <React.Fragment>\r\n                            <CornerDialog\r\n                              title={`Are you sure you want to delete ${t.pagename}`}\r\n                              isShown={state.isShown}\r\n                              onConfirm={() => {\r\n                              removeSite(t._id);\r\n                              setState({isShown: false})\r\n                            }}\r\n                              confirmLabel=\"Delete Site\"\r\n                              hasClose={false}\r\n                              onCancel={() => setState({isShown: false})}></CornerDialog>\r\n                            <FiDelete onClick={() => setState({isShown: true})}/>\r\n\r\n                          </React.Fragment>\r\n                        )}\r\n                      </Component>\r\n      \r\n                      </React.Fragment>\r\n                    \r\n\r\n                    )\r\n                    : null}\r\n                </Pane>\r\n                <Pane elevation={3} className='siteCard cursor-pointer'>\r\n                  <div\r\n                    className=\"h-full w-full flex flex-col justify-center cardOverLay items-center\">\r\n\r\n                    <h6 className='text-red-700 text-3xl font-semibold'>{t.pagename}</h6>\r\n                  </div>\r\n                </Pane>\r\n\r\n              </Pane>\r\n\r\n            </Pane>\r\n\r\n          ))}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nfunction EditInput(props) {\r\n  const [val,\r\n    setVal] = React.useState(props.data.value)\r\n  const valChanged = (v) => {\r\n    setVal(v)\r\n\r\n    $('#editableIframe')\r\n      .contents()\r\n      .find(`.${props.data.class}`)\r\n      .text(val)\r\n  }\r\n  if (props.data.value.length > 30) {\r\n    return (\r\n      <div className='mb-4'>\r\n        <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n          {props.data.class}\r\n        </label>\r\n        <textarea\r\n          style={{\r\n          height: '200px'\r\n        }}\r\n          className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-4/5 py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n          type='text'\r\n          value={val}\r\n          onChange={val => valChanged(val.target.value)}\r\n          name=\"url\"\r\n          placeholder='eg. http://'/>\r\n\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className='mb-4'>\r\n      <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n        {props.data.class}\r\n      </label>\r\n      <input\r\n        className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-4/5 py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n        type='text'\r\n        value={val}\r\n        onChange={val => valChanged(val.target.value)}\r\n        name=\"url\"\r\n        placeholder='eg. http://'/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction MyDropzone(props) {\r\n  const [added, setAdded] = React.useState(false)\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    // Do something with the files\r\n    \r\n    if(props.type == \"ImageChange\"){\r\n      props.droppedImage(acceptedFiles);\r\n      props.close();\r\n\r\n      return;\r\n    }\r\n    setAdded(true);\r\n    props.upload(acceptedFiles, props.user, props.site);\r\n    props.close();\r\n  }, [])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  if(props.type == \"siteUpload\"){\r\n    return (\r\n      <div {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        {\r\n          added ?(\r\n            <div className=\"w-full flex justify-center flex-col fH items-center\">\r\n            <AiOutlineCloudUpload/>\r\n            <p className=\"text-center \">Nice!! Now click the upload site button</p>\r\n            </div>\r\n          ):\r\n          isDragActive ?\r\n          <div className=\"w-full flex justify-center flex-col fH items-center\">\r\n            <AiOutlineCloudUpload/>\r\n            <p className=\"text-center \">Drop it here</p>\r\n            </div> :\r\n            <div className=\"w-full justify-center flex flex-col fH items-center\">\r\n            <AiOutlineCloudUpload/>\r\n            <p className=\"text-center \">Drag and drop the zipped site here to upload</p>\r\n            </div>\r\n        \r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {\r\n        isDragActive ?\r\n          <p>Drop the files here ...</p> :\r\n          <div className=\"w-full h-full flex flex-col items-center\">\r\n          <p className=\"text-center \">Drag and drop images here or click to upload an image.</p>\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction EditReadyT(props) {\r\n  const {data, loading, error} = useQuery(GET_EDITABLE, {\r\n    variables: {\r\n      pagename: props.site,\r\n      email:props.log\r\n    }\r\n  });\r\n  const [imageEdit, setImageEdit] = React.useState(null)\r\n  const [updatePage] = useMutation(UPDATE_PAGE)\r\n  const [stat,\r\n    setStat] = React.useState(props.siteLink)\r\n  const [site,\r\n    setSite] = React.useState(props.siteLink);\r\n  const [currentPage,\r\n    setCurrentPage] = React.useState('index.html')\r\n  const setupSite = (v) => {\r\n    setCurrentPage(v);\r\n    var d = stat + v;\r\n    setSite(d);\r\n  }\r\n  const [showImagePicker, setShowImagePicker] = React.useState(false);\r\n  var iframeRef = React.createRef();\r\n\r\n  const ImageClick = ()=>{\r\n  \r\n      let frame= document.getElementById('editableIframe');\r\n    \r\n    if(!frame)return;\r\n    \r\n    let g = frame.contentWindow.document.getElementsByTagName(\"img\");\r\n    let p = frame.contentWindow.document.getElementsByTagName(\"p\");\r\n    let h = frame.contentWindow.document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\r\n\r\n    for(let par of p){\r\n     par.addEventListener('contextmenu', function(ev) {\r\n        ev.preventDefault();\r\n       addContext(ev,frame.contentWindow)\r\n       return false;\r\n}, false);\r\n }\r\n for(let head of h){\r\n   head.addEventListener('contextmenu', function(ev) {\r\n      ev.preventDefault();\r\n      addContext(ev,frame.contentWindow)\r\n     return false;\r\n}, false);\r\n}\r\n for(let num of g){\r\n     num.addEventListener('contextmenu', function(ev) {\r\n        ev.preventDefault();\r\n        sessionStorage.setItem('Image', $(ev.target).attr('id'));\r\n       $('#GetImages').trigger('click');\r\n       return false;\r\n}, false);\r\n }\r\n    toaster.notify('Images ready for update')\r\n   \r\n   \r\n  }\r\n\r\n  const addContext =(e,b)=>{\r\n    var i = document.getElementById(\"menu\").style;\r\n      var posX = e.clientX;\r\n      var posY = e.clientY;\r\n      menu(posX, posY);\r\n      document.getElementById('editableIframe').contentWindow.document.addEventListener('click', function(e) {\r\n      i.opacity = \"0\";\r\n      setTimeout(function() {\r\n        i.visibility = \"hidden\";\r\n      }, 501);\r\n    }, false);\r\n    var el = e.target;\r\n    let IncFont = getId('IncF');\r\n    let DecFont = getId('DecF');\r\n    let IncM = getId('IncM');\r\n    let DecM = getId('DecM');\r\n    let IncL = getId('IncL');\r\n    let DecL = getId('DecL');\r\n    let Und = getId('Und');\r\n    let IncW = getId('IncW');\r\n    let DecW = getId('DecW');\r\n    let Color = getId('favcolor');\r\n    Color.value = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('color');\r\n\r\n\r\n    IncFont.onclick = function(){\r\n     let style = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('font-size');\r\n    let currentSize = parseFloat(style);\r\n     el.style.fontSize = (currentSize + 2) + 'px';\r\n    }\r\n    DecFont.onclick = function(){\r\n      let style = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('font-size');\r\n     let currentSize = parseFloat(style);\r\n      el.style.fontSize = (currentSize - 2) + 'px';\r\n     }\r\n     IncM.onclick = function(){\r\n      let style = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('margin');\r\n     let currentSize = parseFloat(style);\r\n      el.style.margin = (currentSize + 2) + 'px';\r\n     }\r\n     DecM.onclick = function(){\r\n      let style = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('margin');\r\n     let currentSize = parseFloat(style);\r\n      el.style.margin = (currentSize - 2) + 'px';\r\n     }\r\n     IncL.onclick = function(){\r\n      let style = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('line-height');\r\n     let currentSize = parseFloat(style);\r\n      el.style.lineHeight = (currentSize + .5) + 'px';\r\n     }\r\n     DecL.onclick = function(){\r\n      let style = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('line-height');\r\n     let currentSize = parseFloat(style);\r\n      el.style.lineHeight = (currentSize - .5) + 'px';\r\n     }\r\n     IncW.onclick = function(){\r\n      let style = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('font-weight');\r\n     let currentSize = parseFloat(style);\r\n      el.style.fontWeight = currentSize + 100;\r\n     }\r\n     DecW.onclick = function(){\r\n      let style = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('font-weight');\r\n     let currentSize = parseFloat(style);\r\n      el.style.fontWeight = currentSize - 100;\r\n     }\r\n     Und.onclick = function(){\r\n      let style = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('text-decoration');\r\n      el.style.textDecoration = style.includes('underline')?\"none\":\"underline\";\r\n     }\r\n     Color.onchange = function(){\r\n      let style = document.getElementById('editableIframe').contentWindow.window.getComputedStyle(el, null).getPropertyValue('color');\r\n      // let currentColor = parseFloat(style);\r\n       el.style.color = Color.value;\r\n     }\r\n     \r\n\r\n    function getId(id){\r\n     return document.getElementById(id);\r\n    }\r\n    \r\n    \r\n    function menu(x, y) {\r\n      i.top = y + \"px\";\r\n      i.left = x + \"px\";\r\n      i.visibility = \"visible\";\r\n      i.opacity = \"1\";\r\n    }\r\n  }\r\n\r\n  \r\n  const Publish = () => {\r\n    let node = iframeRef.current;\r\n    var full = document\r\n      .getElementById('editableIframe')\r\n      .contentWindow\r\n      .document;\r\n    let f = new XMLSerializer().serializeToString(full);\r\n    updatePage({\r\n      variables: {\r\n        pageData:f,\r\n        pagename: props.site,\r\n        username: props.log,\r\n        page: currentPage\r\n      }\r\n    }).then((t) => {\r\n      toaster.success('Changes saved successfully');\r\n    }).catch((e) => {\r\n      toaster.danger(\"Site couldn't be activated\");\r\n    })\r\n\r\n  }\r\n  React.useEffect(()=>{\r\n   \r\n  })\r\n\r\n  const ImageDrop = (files)=>{\r\n    \r\n    if (FileReader && files && files.length) {\r\n      var fr = new FileReader();\r\n      fr.onload = function () {\r\n        let frame= document.getElementById('editableIframe');\r\n        let id = sessionStorage.getItem('Image');\r\n        \r\n        frame.contentWindow.document.getElementById(id).src = fr.result;\r\n        frame.contentWindow.document.getElementById(id).removeAttribute('srcset');\r\n      }\r\n      fr.readAsDataURL(files[0]);\r\n  }\r\n  }\r\n\r\n  const Undo = ()=>{\r\n      let frame= document.getElementById('editableIframe');\r\n    frame.contentWindow.document.execCommand('undo', false, null);\r\n  }\r\n  const Save = () => {}\r\n  React.useEffect(() => {\r\n    toaster.notify('Loading images for editing')\r\n    setTimeout(()=>{\r\n     \r\n      ImageClick();\r\n    },6000)\r\n  }, [site])\r\n  if (loading) \r\n    return (\r\n      <div className=\"w-full h-full flex flex-col justify-center items-center\">\r\n        <Spinner/>\r\n      </div>\r\n    )\r\n  const filtered = data.getEditable;\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col items-end\">\r\n      <div class=\"flex flex-row justify-end\">\r\n      <button\r\n        onClick={Undo}\r\n          className='bg-red-500 mr-3  mb-4 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n          type='button'>\r\n          Undo\r\n        </button>\r\n        {/* <button\r\n          className='bg-red-500 mr-3  mb-4 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n          type='button'>\r\n          Save as draft\r\n        </button> */}\r\n        <button\r\n          onClick={Publish}\r\n          className='bg-green-500 mr-3  mb-4 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n          type='button'>\r\n          Save\r\n        </button>\r\n        <button\r\n          onClick={props.Close}\r\n          className='bg-red-500  mb-4 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n          type='button'>\r\n          Exit\r\n        </button>\r\n        <input type=\"file\" id=\"generalFileLoader\" className=\"hidden\"/>\r\n\r\n      </div>\r\n      <div className=\"h-full w-full flex flex-row\">\r\n       <Component\r\n                initialState={{\r\n                isShown: false,\r\n                isLoading: false\r\n              }}\r\n             \r\n                didUpdate={({state, setState}) => {}}>\r\n                {({state, setState}) => (\r\n                  <Pane>\r\n                    <Dialog\r\n                      isShown={state.isShown}\r\n                      title='Image Uploader'\r\n                      width={500}\r\n                      hasFooter={false}\r\n                      onCloseComplete={() => setState({isShown: false, isLoading: false})}\r\n                      isConfirmLoading={state.isLoading}\r\n                      onConfirm={() => {\r\n                      setState({isLoading: true});\r\n                      setState({isShown: false});\r\n                    }}\r\n                      confirmLabel={state.isLoading\r\n                      ? 'Changing...'\r\n                      : 'Change Image'}>\r\n                       <MyDropzone type=\"ImageChange\" close={()=>setState({isShown: false})} droppedImage={ImageDrop}/>\r\n                       {/* <DropImage/> */}\r\n                    </Dialog>\r\n                 \r\n                    <button id=\"GetImages\" onClick={() => setState({isShown: true})}>\r\n                    </button>\r\n                  </Pane>\r\n                )}\r\n              </Component>\r\n        <div className=\"w-1/6 h-full flex flex-col items-center\">\r\n          <h5>Pages</h5>\r\n          <div className=\"overflow-y-scroll w-full  flex flex-col px-4\">\r\n            {filtered.map((item) => (<Buttons set={setupSite} data={item}/>))}\r\n          </div>\r\n        </div>\r\n        <iframe ref={iframeRef} id=\"editableIframe\" className=\"w-5/6 h-full\" src={site}></iframe>\r\n        <div id=\"menu\">\r\n          <p id=\"IncF\">Increase font</p> \r\n          <hr />\r\n          <p id=\"DecF\">Decrease font</p>\r\n          <hr />\r\n          <p id=\"IncM\">Increase margin</p>\r\n          <hr />\r\n          <p id=\"DecM\">Decrease margin</p>\r\n          <hr />\r\n          <p id=\"IncL\">Increase line height</p> \r\n          <hr />\r\n          <p id=\"DecL\">Decrease line height</p> \r\n          <hr />\r\n          <p id=\"IncW\">Increase font weight</p> \r\n          <hr />\r\n          <p id=\"DecW\">Decrease font weight</p> \r\n          <hr />\r\n          <p id=\"Und\">Underline</p> \r\n          <hr />\r\n         \r\n          <p>Change color <input type=\"color\" id=\"favcolor\" name=\"favcolor\" /></p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nfunction Buttons(prop) {\r\n  return (\r\n    <button\r\n      onClick={() => prop.set(prop.data)}\r\n      className='bg-green-500  mb-4 hover:bg-red-700 text-white font-bold py-2 rounded focus:outline-none focus:shadow-outline'\r\n      type='button'>\r\n      {prop\r\n        .data\r\n        .split('.')[0]}\r\n    </button>\r\n\r\n  )\r\n}\r\n\r\nfunction PublishedR(Props) {\r\n  const {loading, error, data} = useQuery(GET_SITES_USER, {\r\n    variables: {\r\n      username: Props.PROFILE.email\r\n    }\r\n  });\r\n  const [upd,\r\n    setUpd] = React.useState(false)\r\n\r\n  const update = () => {\r\n    setUpd(true)\r\n  }\r\n\r\n  const [allSites,\r\n    setAllSites] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    if (data) \r\n      setAllSites(data.getSitesByUser);\r\n    }\r\n  , [data])\r\n  React.useEffect(() => {\r\n    if (data) \r\n      setAllSites(data.getSitesByUser);\r\n    }\r\n  , [upd])\r\n\r\n  if (loading) \r\n    return <p>Loading ...</p>;\r\n  return (\r\n    <div className='h-full w-full overflow-y-scroll p-10'>\r\n      <Tile update={update} data={allSites}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Users() {\r\n  const {loading, error, data} = useQuery(GET_USERS);\r\n  const [user,\r\n    setUser] = React.useState(null)\r\n  const viewTransact = (m) => {\r\n    setUser(m)\r\n  }\r\n  const [alldata,\r\n    SetAlldata] = React.useState([])\r\n  const [values,\r\n    setValues] = React.useState({signClicked: false, username: '', password: '', email: '', confirmPassword: ''})\r\n  const onChange = e => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const loaddata = () => {\r\n    var d = data.getAllUsers;\r\n    var final = d.map((r) => {\r\n      r.userType = r.userType == 0 || r.userType == \"User\"\r\n        ? \"User\"\r\n        : \"Admin\";\r\n      r.sites = Array.isArray(r.sites)\r\n        ? r.sites.length\r\n        : r.sites;\r\n      return r\r\n    });\r\n    SetAlldata(final)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (data) \r\n      loaddata();\r\n    }\r\n  , [data])\r\n  if (loading) \r\n    return <p>Loading ...</p>;\r\n  return (\r\n    <div className=' w-full h-full md:p-10 p-2 flex flex-col items-center'>\r\n      {user\r\n        ? (\r\n          <div className=\"md:w-2/3 w-full h-full flex-row\">\r\n\r\n            <div className=\"w-1/3 h-full\">\r\n              <form className='bg-white  rounded px-8 pt-6 pb-8 mb-4'>\r\n\r\n                <div className='mb-4 mt-6'>\r\n                  <label className='block text-red-700 text-sm font-bold mb-2' for='username'>\r\n                    Username\r\n                  </label>\r\n                  <input\r\n                    className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n                    id='username'\r\n                    value={values.username}\r\n                    onChange={onChange}\r\n                    name=\"username\"\r\n                    type='text'\r\n                    placeholder='Username'/>\r\n                </div>\r\n                <div className='mb-4'>\r\n                  <label className='block text-red-700 text-sm font-bold mb-2' for='username'>\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n                    id='email'\r\n                    value={values.email}\r\n                    onChange={onChange}\r\n                    name=\"email\"\r\n                    type='email'\r\n                    placeholder='Email'/>\r\n                </div>\r\n\r\n              </form>\r\n\r\n            </div>\r\n            <div className=\"w-2/3 h-full\"></div>\r\n          </div>\r\n        )\r\n        : (\r\n          <Pane className=\"rounded-lg md:w-2/3 w-full h-full \">\r\n            <Table\r\n              className=\"userTable\"\r\n              table={{\r\n              Columns,\r\n              options: {\r\n                view: viewTransact\r\n              },\r\n              Data: alldata,\r\n              title: \"User Accounts\"\r\n            }}/>\r\n\r\n          </Pane>\r\n\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChangePassword() {\r\n  const [values,\r\n    setValues] = React.useState({oldPassword: '', newPassword: '', confirmNewPassword: ''})\r\n  const onChange = e => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const Change = () => {}\r\n  return (\r\n    <div className=\"h-full w-full flex flex-col justify-center items-center\">\r\n      <form className='bg-white w-1/3  rounded px-8 pt-6 pb-8 mb-4'>\r\n\r\n        <div className='mb-4 mt-6'>\r\n          <label className='block text-red-700 text-sm font-bold mb-2' for='username'>\r\n            Old Password\r\n          </label>\r\n          <input\r\n            className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n            id='username'\r\n            value={values.oldPassword}\r\n            onChange={onChange}\r\n            name=\"username\"\r\n            type='password'\r\n            placeholder='******************'/>\r\n        </div>\r\n        <div className='mb-4'>\r\n          <label className='block text-red-700 text-sm font-bold mb-2' for='username'>\r\n            New Password\r\n          </label>\r\n          <input\r\n            className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n            id='email'\r\n            value={values.newPassword}\r\n            onChange={onChange}\r\n            name=\"email\"\r\n            type='password'\r\n            placeholder='******************'/>\r\n        </div>\r\n        <div className='mb-6'>\r\n          <label className='block text-red-700 text-sm font-bold mb-2' for='password'>\r\n            Confirm New Password\r\n          </label>\r\n          <input\r\n            className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n            id='password'\r\n            value={values.confirmNewPassword}\r\n            onChange={onChange}\r\n            type='password'\r\n            name=\"confirmPassword\"\r\n            placeholder='******************'/>\r\n\r\n        </div>\r\n        <div className='flex flex-col items-center justify-between'>\r\n          <button\r\n            className='bg-red-700 w-full mb-4 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n            type='button'\r\n            onClick={Change}>\r\n            Change Password\r\n          </button>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Settings() {\r\n\r\n  return (\r\n    <div className='h-full w-full p-10'></div>\r\n  )\r\n}\r\n\r\nfunction AddUsers(props) {\r\n  const [registerWithSite, {\r\n      loading,\r\n      error\r\n    }\r\n  ] = useMutation(REGISTER_NEW_USER_WITH_SITE);\r\n  const [values,\r\n    setValues] = React.useState({signClicked: false, username: '', password: '', email: '', confirmPassword: ''})\r\n\r\n  const [post,\r\n    setPost] = React.useState(null)\r\n  const Register = async(newValues) => {\r\n    const {username, password, confirmPassword, email} = JSON.parse(sessionStorage.getItem('userData'))[0];\r\n    if (!username || !password || !confirmPassword || !email) \r\n      return toaster.warning(\"Please fill all fields\");\r\n    if (password !== confirmPassword) \r\n      return toaster.danger('Passwords do not match');\r\n    registerWithSite({\r\n      variables: {\r\n        username,\r\n        password,\r\n        email,\r\n        ...newValues\r\n      }\r\n    }).then((response) => {\r\n      toaster.success('Added user and site successfully');\r\n\r\n      // props.LoginUser(response.data.register)\r\n    }).catch((error) => {\r\n      return toaster.danger('Either email or username is taken already');\r\n    })\r\n\r\n  }\r\n\r\n  const [ownIndex,\r\n    setOwnIndex] = React.useState(0)\r\n\r\n  const goToNextPage = (vals) => {\r\n    setPost(vals);\r\n    sessionStorage.setItem('userData', JSON.stringify([vals]));\r\n    setOwnIndex(1)\r\n\r\n  }\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col items-center\">\r\n      <div className='w-4/5 md:w-4/5 lg:w-2/5 lg:p-10'>\r\n        <Component\r\n          initialState={{\r\n          selectedIndex: ownIndex,\r\n          tabs: [ < UserForm submit = {\r\n              goToNextPage\r\n            }\r\n            next = {\r\n              () => setOwnIndex(1)\r\n            } />, < WebsiteForm submit = {\r\n              Register\r\n            } />\r\n          ],\r\n          tabsTitle: [\"Fill user details\", \"Add User's Site\"]\r\n        }}>\r\n          {({state, setState}) => (\r\n            <Pane height={120}>\r\n              <Tablist marginBottom={16} flexBasis={240} marginRight={24}>\r\n                {state\r\n                  .tabsTitle\r\n                  .map((tab, index) => (\r\n                    <Tab\r\n                      key={index}\r\n                      id={index}\r\n                      onSelect={() => setOwnIndex(index)}\r\n                      isSelected={index === ownIndex}\r\n                      aria-controls={`panel-${index}`}>\r\n                      {state.tabsTitle[index]}\r\n                    </Tab>\r\n                  ))}\r\n              </Tablist>\r\n              <Pane padding={16} background=\"tint1\" flex=\"1\">\r\n                {state\r\n                  .tabs\r\n                  .map((tab, index) => (\r\n                    <Pane\r\n                      key={index}\r\n                      id={`panel-${index}`}\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby={tab}\r\n                      aria-hidden={index !== ownIndex}\r\n                      display={index === ownIndex\r\n                      ? 'block'\r\n                      : 'none'}>\r\n                      {state.tabs[ownIndex]}\r\n                    </Pane>\r\n                  ))}\r\n              </Pane>\r\n            </Pane>\r\n          )}\r\n        </Component>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction UserForm(props) {\r\n  const [values,\r\n    setValues] = React.useState({signClicked: false, username: '', password: '', email: '', confirmPassword: ''})\r\n  const onChange = e => {\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form className='bg-white  rounded px-8 pt-6 pb-8 mb-4'>\r\n\r\n      <div className='mb-4 mt-6'>\r\n        <label className='block text-red-700 text-sm font-bold mb-2' for='username'>\r\n          Username\r\n        </label>\r\n        <input\r\n          className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n          id='username'\r\n          value={values.username}\r\n          onChange={onChange}\r\n          name=\"username\"\r\n          type='text'\r\n          placeholder='Username'/>\r\n      </div>\r\n      <div className='mb-4'>\r\n        <label className='block text-red-700 text-sm font-bold mb-2' for='username'>\r\n          Email\r\n        </label>\r\n        <input\r\n          className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n          id='email'\r\n          value={values.email}\r\n          onChange={onChange}\r\n          name=\"email\"\r\n          type='email'\r\n          placeholder='Email'/>\r\n      </div>\r\n      <div className='mb-4'>\r\n        <label className='block text-red-700 text-sm font-bold mb-2' for='password'>\r\n          Password\r\n        </label>\r\n        <input\r\n          className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n          id='password'\r\n          type='password'\r\n          value={values.password}\r\n          onChange={onChange}\r\n          name=\"password\"\r\n          placeholder='******************'/>\r\n\r\n      </div>\r\n      <div className='mb-6'>\r\n        <label className='block text-red-700 text-sm font-bold mb-2' for='password'>\r\n          Confirm Password\r\n        </label>\r\n        <input\r\n          className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n          id='password'\r\n          value={values.confirmPassword}\r\n          onChange={onChange}\r\n          type='password'\r\n          name=\"confirmPassword\"\r\n          placeholder='******************'/>\r\n\r\n      </div>\r\n      <div className='flex flex-col items-center justify-between'>\r\n        <button\r\n          className='bg-red-700 w-full mb-4 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n          type='button'\r\n          onClick={() => {\r\n          props.next();\r\n          props.submit(values)\r\n        }}>\r\n          Next\r\n        </button>\r\n\r\n      </div>\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nfunction WebsiteForm(props) {\r\n  const [ftpUsername,\r\n    setFtpUsername] = React.useState(\"\")\r\n  const [ftpPassword,\r\n    setFtpPassword] = React.useState(\"\")\r\n\r\n  const [ftp,\r\n    setFtp] = React.useState(\"\");\r\n  const [url,\r\n    setUrl] = React.useState(\"\");\r\n  const [pagename,\r\n    setPageName] = React.useState(\"\");\r\n\r\n  const Send = () => {\r\n    let values = {\r\n      url,\r\n      pagename,\r\n      ftp,\r\n      ftpUsername,\r\n      ftpPassword\r\n    }\r\n    props.submit(values)\r\n  }\r\n  return (\r\n    <form className='bg-white  rounded px-8 pt-6 pb-8 mb-4'>\r\n      <div className='mb-4'>\r\n        <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n          Site name / Alias\r\n        </label>\r\n        <input\r\n          className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n          id='siteName'\r\n          type='text'\r\n          value={pagename}\r\n          onChange={val => setPageName(val.target.value)}\r\n          name=\"site\"/>\r\n\r\n      </div>\r\n      <div className='mb-4'>\r\n        <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n          Site Url\r\n        </label>\r\n        <input\r\n          className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n          id='siteUrl'\r\n          type='text'\r\n          value={url}\r\n          onChange={val => setUrl(val.target.value)}\r\n          name=\"url\"/>\r\n\r\n      </div>\r\n      <div className='mb-4'>\r\n        <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n          FTP Url\r\n        </label>\r\n        <input\r\n          className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n          id='ftpUrl'\r\n          type='text'\r\n          value={ftp}\r\n          onChange={val => setFtp(val.target.value)}\r\n          name=\"ftp\"/>\r\n\r\n      </div>\r\n      <div className='mb-4'>\r\n        <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n          FTP Username\r\n        </label>\r\n        <input\r\n          className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n          id='ftpUrl'\r\n          type='text'\r\n          value={ftpUsername}\r\n          onChange={val => setFtpUsername(val.target.value)}\r\n          name=\"ftp\"/>\r\n\r\n      </div>\r\n      <div className='mb-4'>\r\n        <label className='block text-red-700 text-sm font-bold mb-2' for='siteName'>\r\n          FTP Password\r\n        </label>\r\n        <input\r\n          className='bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-red-700'\r\n          id='ftpUrl'\r\n          type='text'\r\n          value={ftpPassword}\r\n          onChange={val => setFtpPassword(val.target.value)}\r\n          name=\"ftp\"/>\r\n\r\n      </div>\r\n      <div className='flex flex-col items-center justify-between'>\r\n        <button\r\n          className='bg-red-700 w-full mb-4 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline'\r\n          type='button'\r\n          onClick={() => Send()}>\r\n          Add User\r\n        </button>\r\n\r\n      </div>\r\n    </form>\r\n\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => (state)\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\nconst Tile = connect(mapStateToProps, mapDispatchToProps)(withRouter(TileR))\r\nconst Published = connect(mapStateToProps, mapDispatchToProps)(withRouter(PublishedR))\r\nconst EditReady = connect(mapStateToProps, mapDispatchToProps)(withRouter(EditReadyT))\r\nconst ProfileView = connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileViewL))\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homecontent)\r\n","import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Pane } from 'evergreen-ui'\r\nimport './home.css'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { withRouter, Link, useLocation, Redirect } from 'react-router-dom'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport HomeContent from './Homecontent'\r\nimport {LogoutUser} from '../actions'\r\nimport { FiHome, FiSettings, FiUser, FiLogOut, FiEdit, FiEye, FiDelete } from 'react-icons/fi'\r\nclass Home extends PureComponent {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      route: 'home',\r\n      content: 'Published'\r\n    }\r\n  }\r\n  change = page => {\r\n    this.content(page.content)\r\n    this.setState({\r\n      route: [page.page]\r\n    })\r\n   \r\n  }\r\n\r\n  content = g => {\r\n    this.setState({\r\n      content: g\r\n    })\r\n  }\r\n\r\n  renderContent = v => {\r\n    return <HomeContent page={v}/>\r\n  }\r\n\r\n  render () {\r\n    if(!this.props.PROFILE._id){\r\n      return <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n      <div className='w-screen h-screen flex flex-col md:flex-row '>\r\n        <Pane\r\n          elevation={4}\r\n          className='sid h-full  hidden md:flex flex-col pt-20'\r\n        >\r\n          <Navs route={this.state.route} logout={this.props.LogoutUser} change={this.change} />\r\n        </Pane>\r\n        <div className='roP h-full flex flex-col'>\r\n          <Navbar name='' />\r\n          <Vnav route={this.state.route} content={this.content} />\r\n        </div>\r\n        <div className='mainPage w-full'>\r\n          {this.renderContent(this.state.content)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction VnavL (props) {\r\n  const lok = useSpring({\r\n    opacity: 1,\r\n    from: { opacity: 0 }\r\n  })\r\n  const menus = menu => {\r\n    \r\n    if(Array.isArray(menu))menu=menu[0];\r\n    switch (menu) {\r\n      case 'home':\r\n        let mn = ['Published']\r\n        return mn.map(p => (\r\n          <animated.div style={lok}>\r\n            <ListItem button name={p} onClick={() => props.content(p)}>\r\n              <ListItemText primary={p} />\r\n            </ListItem>\r\n          </animated.div>\r\n        ))\r\n      case 'users':\r\n        let vm = props.PROFILE.userType>0? ['Accounts', 'Add user', 'Profile']:['Profile'];\r\n        return vm.map(p =>(\r\n          <animated.div style={lok}>\r\n          <ListItem button name={p} onClick={() => props.content(p)}>\r\n            <ListItemText primary={p} />\r\n          </ListItem>\r\n        </animated.div>\r\n        ))\r\n        case 'settings':\r\n          let om = ['Change Password'];\r\n          return om.map(p =>(\r\n            <animated.div style={lok}>\r\n            <ListItem button name={p} onClick={() => props.content(p)}>\r\n              <ListItemText primary={p} />\r\n            </ListItem>\r\n          </animated.div>\r\n          ))\r\n    }\r\n  }\r\n  return (\r\n    <div className='flex flex-col'>\r\n      <List component='nav' aria-label='Menus'>\r\n        {menus(props.route)}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction NavsL (props) {\r\n  const [page, setPage] = React.useState('home')\r\n  let location = useLocation()\r\n  const data = {\r\n    home: 'Published',\r\n    users: props.PROFILE.userType>0 ?'Accounts': 'Profile',\r\n    settings: 'Change Password'\r\n  }\r\n\r\n  const changeActive = h => {\r\n    setPage(h)\r\n    props.change({\r\n      page: h,\r\n      content: data[h]\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MenuIcon\r\n        page='home'\r\n        onClick={() => changeActive('home')}\r\n        active={page == 'home' ? true : false}\r\n        route={props.route}\r\n        menu={<FiHome color='white' size='2rem' />}\r\n      />\r\n      <MenuIcon\r\n        page='user'\r\n        onClick={() => changeActive('users')}\r\n        active={page == 'users' ? true : false}\r\n        route={props.route}\r\n        menu={<FiUser color='white' size='2rem' />}\r\n      />\r\n      <MenuIcon\r\n        page='settings'\r\n        onClick={() => changeActive('settings')}\r\n        active={page == 'settings' ? true : false}\r\n        route={props.route}\r\n        menu={<FiSettings color='white' size='2rem' />}\r\n      />\r\n      <MenuIcon\r\n        route={props.route}\r\n        onClick={props.logout}\r\n        active={page == 'logout' ? true : false}\r\n        menu={<FiLogOut color='white' size='2rem' />}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nfunction MenuIcon (props) {\r\n  const lok = useSpring({\r\n    opacity: 1,\r\n    from: { opacity: 0 }\r\n  })\r\n\r\n  const where = p => {\r\n    switch (p) {\r\n      case 'home':\r\n        return '/home'\r\n      case 'user':\r\n        return '/home/users'\r\n      case 'settings':\r\n        return '/home/settings'\r\n      case 'logout':\r\n        return '/home/logout'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`w-full my-5 flex justify-center cursor-pointer ${\r\n        props.active ? 'active' : ''\r\n      }`}\r\n    >\r\n      <animated.div style={lok} onClick={props.onClick}>\r\n        <Link to={where(props.page)}>{props.menu}</Link>\r\n      </animated.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Navbar (props) {\r\n  const lok = useSpring({ opacity: 1, from: { opacity: 0 } })\r\n  return (\r\n    <div className='flex flex-row navBar p-4'>\r\n      <div className='flex flex-col '>\r\n        <animated.div style={lok}>\r\n          <h3 className='text-xl font-bold text-white'>{props.name}</h3>\r\n          {/* <hr className=' border-blue-900' /> */}\r\n        </animated.div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => (state)\r\n\r\nconst mapDispatchToProps = {\r\n  LogoutUser\r\n}\r\n\r\nconst Navs = connect(mapStateToProps, mapDispatchToProps)(withRouter(NavsL))\r\nconst Vnav  = connect(mapStateToProps, mapDispatchToProps)(withRouter(VnavL))\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Home))\r\n","import Auth from './auth'\r\nimport Home from './home';\r\n\r\n\r\n\r\nexport default {Auth, Home}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\nimport Pages from './pages'\n\nfunction App() {\n  return (\n     <Router>\n    <Switch>\n    <Route  path=\"/home\" component={Pages.Home}>\n      </Route>\n   \n      <Route path=\"/\" component={Pages.Auth}>\n      </Route>\n    </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/tailwind.css'\n\nimport Store from './store'\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: '/api/',\n});\n\nconst Wrapper = function () {\n  return (\n    <Provider store={Store}>\n     <ApolloProvider client={client}>\n     <App />\n     </ApolloProvider>\n    \n    </Provider>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Wrapper />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}